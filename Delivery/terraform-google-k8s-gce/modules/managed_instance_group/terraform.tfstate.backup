{
  "version": 4,
  "terraform_version": "1.2.3",
  "serial": 54,
  "lineage": "e6987bb3-84ed-75ee-65ca-e777bf9ebeed",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "google_client_config",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token": "ya29.a0AVA9y1taAPae1oiMf-2qt1qO1rA2NWFPpJql7h5dCusThmHLMjltVsfZA99aJDB9I7TH9ve_W4YJlT8kzCBrK-9SPxE2OE3IxklQGTNyVKzrnsej_UbbilydxLvS1WoSMa-2sR1_EJJ5tUTP1MHGfhdk5utJV7c906y15A",
            "id": "projects//regions//zones/",
            "project": "",
            "region": "",
            "zone": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "google_compute_subnetwork",
      "name": "subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "",
            "gateway_address": "10.128.0.1",
            "id": "projects/lustrous-camera-352403/regions/us-central1/subnetworks/default",
            "ip_cidr_range": "10.128.0.0/20",
            "name": "default",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "private_ip_google_access": false,
            "project": "lustrous-camera-352403",
            "region": "us-central1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/regions/us-central1/subnetworks/default"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "master",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "gzip": true,
            "id": "2440784223",
            "part": [
              {
                "content": "#!/bin/bash -xe\r\n\r\ncurl --retry 5 -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\r\n\r\ncat \u003c\u003cEOF \u003e /etc/apt/sources.list.d/kubernetes.list\r\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\r\nEOF\r\n\r\nsudo add-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\nsudo apt-get update\r\n\r\nnetwork_plugin=kubenet\r\nif [ \"kubenet\" == \"calico\" ]; then\r\n  network_plugin=cni\r\nfi\r\n\r\n# Drop in config for kubenet and cloud provider\r\nmkdir -p /etc/systemd/system/kubelet.service.d\r\ncat \u003e /etc/systemd/system/kubelet.service.d/20-gcenet.conf \u003c\u003cEOF\r\n[Service]\r\nEnvironment=\"KUBELET_NETWORK_ARGS=--network-plugin=${network_plugin} --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\"\r\nEnvironment=\"KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local\"\r\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=gce\"\r\nEOF\r\n\r\nmkdir -p /etc/kubernetes\r\ncat \u003c\u003c'EOF' \u003e /etc/kubernetes/gce.conf\r\n[global]\r\nmultizone = true\r\nnode-tags = k8s-test-565b15d9\r\nnode-instance-prefix = k8s-test-565b15d9\r\nnetwork-project-id = \r\nnetwork-name = default\r\nsubnetwork-name = default\r\n\r\nEOF\r\ncp /etc/kubernetes/gce.conf /etc/gce.conf\r\n\r\n# kubeadm 1.8 workaround for https://github.com/kubernetes/release/issues/406\r\nmkdir -p /etc/kubernetes/pki\r\ncp /etc/kubernetes/gce.conf /etc/kubernetes/pki/gce.conf\r\n\r\n# for GLBC\r\ntouch /var/log/glbc.log\r\n\r\nsudo apt-get install -y \\\r\n  jq \\\r\n  nginx \\\r\n  docker.io=18.\\** \\\r\n  kubernetes-cni=0.6.0* \\\r\n  kubelet=1.11.6-00* \\\r\n  kubeadm=1.11.6-00* \\\r\n  kubectl=1.11.6-00* \\\r\n\r\nfor f in kubelet kubeadm kubectl; do\r\n  gsutil cp gs://kubernetes-release/release/v1.11.6-00/bin/linux/amd64/$f /usr/bin/$f\r\n  chmod +x /usr/bin/$f\r\ndone\r\n\r\nsystemctl daemon-reload",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-instance/10-k8s-core.sh",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash -xe\r\n\r\ncat \u003c\u003cEOF \u003e /etc/kubernetes/kubeadm.conf\r\napiVersion: kubeadm.k8s.io/v1alpha1\r\nkind: MasterConfiguration\r\nkubernetesVersion: v1.11.6-00\r\ncloudProvider: gce\r\ntoken: 7e1cbc.453eef0a21157a78\r\nnetworking:\r\n  serviceSubnet: 10.96.0.0/12\r\n  podSubnet: 192.168.0.0/16\r\nauthorizationModes:\r\n- Node\r\n- RBAC\r\napiServerCertSANs:\r\n- 127.0.0.1\r\ncontrollerManagerExtraArgs:\r\n  cluster-name: k8s-test-565b15d9\r\n  allocate-node-cidrs: \"true\"\r\n  cidr-allocator-type: \"RangeAllocator\"\r\n  configure-cloud-routes: \"true\"\r\n  cloud-config: /etc/kubernetes/pki/gce.conf\r\n  cluster-cidr: 192.168.0.0/16\r\n  service-cluster-ip-range: 10.96.0.0/12\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\nschedulerExtraArgs:\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\napiServerExtraArgs:\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\nEOF\r\nchmod 0600 /etc/kubernetes/kubeadm.conf\r\n\r\nkubeadm init --config /etc/kubernetes/kubeadm.conf\r\n\r\nexport KUBECONFIG=/etc/kubernetes/admin.conf\r\n\r\nif [ \"kubenet\" == \"calico\" ]; then\r\n  manifest_version=\r\n  [[ 2.6 =~ ^2.4 ]] \u0026\u0026 manifest_version=1.6\r\n  [[ 2.6 =~ ^2.6 ]] \u0026\u0026 manifest_version=1.7\r\n  [[ -z ${manifest_version} ]] \u0026\u0026 echo \"ERROR: Unsupported calico version: 2.6\" \u0026\u0026 exit 1\r\n  kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml\r\n  kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/${manifest_version}/calico.yaml\r\nfi\r\n\r\n# ClusterRoleBiding for persistent volume provisioner.\r\nkubectl create clusterrolebinding system:controller:persistent-volume-provisioner \\\r\n  --clusterrole=system:persistent-volume-provisioner \\\r\n  --user system:serviceaccount:kube-system:pvc-protection-controller\r\n\r\n# kubeadm manages the manifests directory, so add configmap after the init returns.\r\nkubectl create -f - \u003c\u003c'EOF'\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: ingress-uid\r\n  namespace: kube-system\r\ndata:\r\n  provider-uid: c81dca1f97a7b4c4\r\n  uid: c81dca1f97a7b4c4\r\nEOF\r\n\r\n# Install L7 GLBC controller, path glbc.manifest to support kubeadm cluster.\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/saltbase/salt/l7-gcp/glbc.manifest \u003e /tmp/glbc.manifest\r\nkubectl convert -f /tmp/glbc.manifest -o json | jq '.spec.volumes |= . + [{\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/etc/kubernetes/admin.conf\", \"type\": \"File\"}}] | .spec.containers[0].volumeMounts |= . + [{\"name\": \"kubeconfig\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/admin.conf\"}]' | \\\r\n  sed \\\r\n    -e 's|--apiserver-host=http://localhost:8080|--apiserver-host=https://127.0.0.1:6443|g' \\\r\n    -e 's|--verbose=true|--verbose=true --kubeconfig=/etc/kubernetes/admin.conf|g' \\\r\n    \u003e /etc/kubernetes/manifests/glbc.manifest\r\nchmod 0600 /etc/kubernetes/manifests/glbc.manifest\r\n\r\n# Install default http-backend controller\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/addons/cluster-loadbalancing/glbc/default-svc-controller.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install default http-backend service\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/addons/cluster-loadbalancing/glbc/default-svc.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install dashboard addon\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/kubernetes-dashboard.yaml |\r\n  kubectl create -n kube-system -f -",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-instance/20-master.sh",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash\r\n\r\n# Docker 1.13+ defaults FORWRD to DROP. Allow the cbr0 interface.\r\niptables -A FORWARD -i cbr0 -j ACCEPT\r\niptables -A FORWARD -o cbr0 -j ACCEPT",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-boot/10-iptables.sh",
                "merge_type": ""
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "gzip": true,
            "id": "3873676128",
            "part": [
              {
                "content": "#!/bin/bash -xe\r\n\r\ncurl --retry 5 -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\r\n\r\ncat \u003c\u003cEOF \u003e /etc/apt/sources.list.d/kubernetes.list\r\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\r\nEOF\r\n\r\nsudo add-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\nsudo apt-get update\r\n\r\nnetwork_plugin=kubenet\r\nif [ \"kubenet\" == \"calico\" ]; then\r\n  network_plugin=cni\r\nfi\r\n\r\n# Drop in config for kubenet and cloud provider\r\nmkdir -p /etc/systemd/system/kubelet.service.d\r\ncat \u003e /etc/systemd/system/kubelet.service.d/20-gcenet.conf \u003c\u003cEOF\r\n[Service]\r\nEnvironment=\"KUBELET_NETWORK_ARGS=--network-plugin=${network_plugin} --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\"\r\nEnvironment=\"KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local\"\r\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=gce\"\r\nEOF\r\n\r\nmkdir -p /etc/kubernetes\r\ncat \u003c\u003c'EOF' \u003e /etc/kubernetes/gce.conf\r\n[global]\r\nmultizone = true\r\nnode-tags = k8s-test-565b15d9\r\nnode-instance-prefix = k8s-test-565b15d9\r\nnetwork-project-id = \r\nnetwork-name = default\r\nsubnetwork-name = default\r\n\r\nEOF\r\ncp /etc/kubernetes/gce.conf /etc/gce.conf\r\n\r\n# kubeadm 1.8 workaround for https://github.com/kubernetes/release/issues/406\r\nmkdir -p /etc/kubernetes/pki\r\ncp /etc/kubernetes/gce.conf /etc/kubernetes/pki/gce.conf\r\n\r\n# for GLBC\r\ntouch /var/log/glbc.log\r\n\r\nsudo apt-get install -y \\\r\n  jq \\\r\n  nginx \\\r\n  docker.io=18.\\** \\\r\n  kubernetes-cni=0.6.0* \\\r\n  kubelet=1.11.6-00* \\\r\n  kubeadm=1.11.6-00* \\\r\n  kubectl=1.11.6-00* \\\r\n\r\nfor f in kubelet kubeadm kubectl; do\r\n  gsutil cp gs://kubernetes-release/release/v1.11.6-00/bin/linux/amd64/$f /usr/bin/$f\r\n  chmod +x /usr/bin/$f\r\ndone\r\n\r\nsystemctl daemon-reload",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-instance/10-k8s-core.sh",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash -xe\r\n\r\nkubeadm join --token=7e1cbc.453eef0a21157a78 --discovery-token-unsafe-skip-ca-verification 10.128.0.10:6443",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-instance/20-node.sh",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash\r\n\r\n# Docker 1.13+ defaults FORWRD to DROP. Allow the cbr0 interface.\r\niptables -A FORWARD -i cbr0 -j ACCEPT\r\niptables -A FORWARD -o cbr0 -j ACCEPT",
                "content_type": "text/x-shellscript",
                "filename": "scripts/per-boot/10-iptables.sh",
                "merge_type": ""
              }
            ],
            "rendered": "H4sIAAAAAAAA/7xWW2/buBJ+F6D/MMcnQM9pQdJKc2tSFUgTp1j0ksJJt7tIg4AiRzJjmtSSVOrs5b8vqEvtNA3Qh6JPMmeG39w/+siagCaQ89sa92HR6KBq7gJbqCXKAyhsYyR3t/no7S9vJy9PP7w7Ppz+PkriifyKzitr9iGj4zRJE0LWjdJkwD5WvrZehdaWh8DFbIEmHECpNBq+wHzkhVN18KxGR5TxgRuBLBuT+Z4nwjqkfjZaAZ47bnyJjkyMsFKZah92CxXWDNpsAi4DWxI/Q607B2nyVi3wXuD//Q8rlGEF9zMgS4wi0TgNhDgM7ha2gZT+7A3MQqj9PmPSfjbackmlFXN0VNgF08o0S9YUjQkNq+oK/gZeBzLHW+BSAhkg7wDVXMx5hZ4KbRtJK2srjS0crwOTVrAeg34TMU0ED/D8+eT0BF4Aw9DaM28bJ9BTrXygks2bAp3B0EvSRGLRRrDPojld0yvLYHUkSzSKa1hwZdJkcnoSPfpG2uifxFgcto217hY+pQkAjCL2BXdilvOF3Nm6/O6a9QAb/9O+uHKokXsEIvz/e4UPvNA4WoVQB1JhgKaWPLQtMxg+Wze/qnVTKZPHPAyGNFElXMCoP44gz2EkuFbCjuDyAMIMTXTw1W1hVJqUqp0OOHa2BmVAWFOqCkrroIcDbiS0zYPa2Rsl0aXJYi6VA1J3HfG3PuBC9t+2GxoD9ehulEAquya++D5jtjkmlYieaQym632aXJx1BpdpMjE3ylkTFywfvf7wcvJmcn71bnL+8XT6+upw+uosJ6TPlfS5bvx1N/l/gBBhFIkeiFQub0MTRrHoV/baQplOaevQKgtlRg/4P353NvgWuvEBHZHG59mYPtuhY5qNYU1h47zl/ZFqK7h+CHfy2/n0cIVsG0mGNuSViNPST+3dlqxGfNigR5PTk0dDE1ZqVglsC50mF5W2BdeXadKS5J/WIOQQXINpYqxEEnjlIYfIWAF9INs720W2LZ/16oHVSO2wVMsHLIfGOHuNIhAlIYeVOHIl5CCx5I0OcRGKh1R95uJexl9S6hSrBOOgRzMuF5DRPYiw3EX+bwd+2ONKhVlTtOu7BtovLFPeN+jZ1njn4Zqzeq6+I7K7F74KNEb06s3LozQJthEzYDfcMW0rVulCUG2rezzR1l9rID1VXf/RfU2lzLL72TOTsnm2Rz89ftxJ1/hQGJWP6Q4dr6k0hjyjWUZ3yHhdzuXim3IR9FfyNInZlJFgesAvfegvHIC08X7lm6A0iBqq2Iq1yIb6D9+bLy7al60j2paR2UYJrPGulW+UEVbMFlbCk+VdubSmpdWOikTQIDkurIm+LJc//rnfHJO4KT/9qR+KfW2VAUKCnaPJdzEThaBb208RyzHfzLLtXb67B4RI5YW9QXfbWZLGeF4i8XNVE8HJDTpVKsFj+pCNaba51zLc/s7W1tMfVrTC2hD/H6m6fRb9Tyta/yC2mwIZzZ4+GTjHw8np9OP0GIKF4+npewqHWtvP8YEFUbgxKBPQlVwgTZMhbiCH7bXD6TEQ1dmRazg8Opq8P3/AzN4zu1tUQtLk3wAAAP//uilRPtcKAAA="
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "core-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "14d13783af888674701b63782c493a15f2270fe61a3afb15089ed108f03dd455",
            "rendered": "#!/bin/bash -xe\r\n\r\ncurl --retry 5 -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\r\n\r\ncat \u003c\u003cEOF \u003e /etc/apt/sources.list.d/kubernetes.list\r\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\r\nEOF\r\n\r\nsudo add-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\nsudo apt-get update\r\n\r\nnetwork_plugin=kubenet\r\nif [ \"kubenet\" == \"calico\" ]; then\r\n  network_plugin=cni\r\nfi\r\n\r\n# Drop in config for kubenet and cloud provider\r\nmkdir -p /etc/systemd/system/kubelet.service.d\r\ncat \u003e /etc/systemd/system/kubelet.service.d/20-gcenet.conf \u003c\u003cEOF\r\n[Service]\r\nEnvironment=\"KUBELET_NETWORK_ARGS=--network-plugin=${network_plugin} --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\"\r\nEnvironment=\"KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local\"\r\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=gce\"\r\nEOF\r\n\r\nmkdir -p /etc/kubernetes\r\ncat \u003c\u003c'EOF' \u003e /etc/kubernetes/gce.conf\r\n[global]\r\nmultizone = true\r\nnode-tags = k8s-test-565b15d9\r\nnode-instance-prefix = k8s-test-565b15d9\r\nnetwork-project-id = \r\nnetwork-name = default\r\nsubnetwork-name = default\r\n\r\nEOF\r\ncp /etc/kubernetes/gce.conf /etc/gce.conf\r\n\r\n# kubeadm 1.8 workaround for https://github.com/kubernetes/release/issues/406\r\nmkdir -p /etc/kubernetes/pki\r\ncp /etc/kubernetes/gce.conf /etc/kubernetes/pki/gce.conf\r\n\r\n# for GLBC\r\ntouch /var/log/glbc.log\r\n\r\nsudo apt-get install -y \\\r\n  jq \\\r\n  nginx \\\r\n  docker.io=18.\\** \\\r\n  kubernetes-cni=0.6.0* \\\r\n  kubelet=1.11.6-00* \\\r\n  kubeadm=1.11.6-00* \\\r\n  kubectl=1.11.6-00* \\\r\n\r\nfor f in kubelet kubeadm kubectl; do\r\n  gsutil cp gs://kubernetes-release/release/v1.11.6-00/bin/linux/amd64/$f /usr/bin/$f\r\n  chmod +x /usr/bin/$f\r\ndone\r\n\r\nsystemctl daemon-reload",
            "template": "#!/bin/bash -xe\r\n\r\ncurl --retry 5 -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\r\n\r\ncat \u003c\u003cEOF \u003e /etc/apt/sources.list.d/kubernetes.list\r\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\r\nEOF\r\n\r\nsudo add-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\nsudo apt-get update\r\n\r\nnetwork_plugin=kubenet\r\nif [ \"${pod_network_type}\" == \"calico\" ]; then\r\n  network_plugin=cni\r\nfi\r\n\r\n# Drop in config for kubenet and cloud provider\r\nmkdir -p /etc/systemd/system/kubelet.service.d\r\ncat \u003e /etc/systemd/system/kubelet.service.d/20-gcenet.conf \u003c\u003cEOF\r\n[Service]\r\nEnvironment=\"KUBELET_NETWORK_ARGS=--network-plugin=$${network_plugin} --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\"\r\nEnvironment=\"KUBELET_DNS_ARGS=--cluster-dns=${dns_ip} --cluster-domain=cluster.local\"\r\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=gce\"\r\nEOF\r\n\r\nmkdir -p /etc/kubernetes\r\ncat \u003c\u003c'EOF' \u003e /etc/kubernetes/gce.conf\r\n[global]\r\nmultizone = true\r\nnode-tags = ${tags}\r\nnode-instance-prefix = ${instance_prefix}\r\nnetwork-project-id = ${project_id}\r\nnetwork-name = ${network_name}\r\nsubnetwork-name = ${subnetwork_name}\r\n${gce_conf_add}\r\nEOF\r\ncp /etc/kubernetes/gce.conf /etc/gce.conf\r\n\r\n# kubeadm 1.8 workaround for https://github.com/kubernetes/release/issues/406\r\nmkdir -p /etc/kubernetes/pki\r\ncp /etc/kubernetes/gce.conf /etc/kubernetes/pki/gce.conf\r\n\r\n# for GLBC\r\ntouch /var/log/glbc.log\r\n\r\nsudo apt-get install -y \\\r\n  jq \\\r\n  nginx \\\r\n  docker.io=${docker_version}* \\\r\n  kubernetes-cni=${cni_version}* \\\r\n  kubelet=${k8s_version}* \\\r\n  kubeadm=${k8s_version}* \\\r\n  kubectl=${k8s_version}* \\\r\n\r\nfor f in kubelet kubeadm kubectl; do\r\n  gsutil cp gs://kubernetes-release/release/v${k8s_version_override}/bin/linux/amd64/$f /usr/bin/$f\r\n  chmod +x /usr/bin/$f\r\ndone\r\n\r\nsystemctl daemon-reload",
            "vars": {
              "cni_version": "0.6.0",
              "dns_ip": "10.96.0.10",
              "docker_version": "18.\\*",
              "gce_conf_add": "",
              "instance_prefix": "k8s-test-565b15d9",
              "k8s_version": "1.11.6-00",
              "k8s_version_override": "1.11.6-00",
              "network_name": "default",
              "pod_network_type": "kubenet",
              "project_id": "",
              "subnetwork_name": "default",
              "tags": "k8s-test-565b15d9"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "iptables",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9029fa55b5e9b4ead50709a87176642c70d907c08673bd3869aa7f876112efea",
            "rendered": "#!/bin/bash\r\n\r\n# Docker 1.13+ defaults FORWRD to DROP. Allow the cbr0 interface.\r\niptables -A FORWARD -i cbr0 -j ACCEPT\r\niptables -A FORWARD -o cbr0 -j ACCEPT",
            "template": "#!/bin/bash\r\n\r\n# Docker 1.13+ defaults FORWRD to DROP. Allow the cbr0 interface.\r\niptables -A FORWARD -i cbr0 -j ACCEPT\r\niptables -A FORWARD -o cbr0 -j ACCEPT",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "master-bootstrap",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f2b4cbe7c50b6ea9e0bc59485bd49fb8326460ba6db9cf1603fad9c276ee5983",
            "rendered": "#!/bin/bash -xe\r\n\r\ncat \u003c\u003cEOF \u003e /etc/kubernetes/kubeadm.conf\r\napiVersion: kubeadm.k8s.io/v1alpha1\r\nkind: MasterConfiguration\r\nkubernetesVersion: v1.11.6-00\r\ncloudProvider: gce\r\ntoken: 7e1cbc.453eef0a21157a78\r\nnetworking:\r\n  serviceSubnet: 10.96.0.0/12\r\n  podSubnet: 192.168.0.0/16\r\nauthorizationModes:\r\n- Node\r\n- RBAC\r\napiServerCertSANs:\r\n- 127.0.0.1\r\ncontrollerManagerExtraArgs:\r\n  cluster-name: k8s-test-565b15d9\r\n  allocate-node-cidrs: \"true\"\r\n  cidr-allocator-type: \"RangeAllocator\"\r\n  configure-cloud-routes: \"true\"\r\n  cloud-config: /etc/kubernetes/pki/gce.conf\r\n  cluster-cidr: 192.168.0.0/16\r\n  service-cluster-ip-range: 10.96.0.0/12\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\nschedulerExtraArgs:\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\napiServerExtraArgs:\r\n  feature-gates: AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true\r\nEOF\r\nchmod 0600 /etc/kubernetes/kubeadm.conf\r\n\r\nkubeadm init --config /etc/kubernetes/kubeadm.conf\r\n\r\nexport KUBECONFIG=/etc/kubernetes/admin.conf\r\n\r\nif [ \"kubenet\" == \"calico\" ]; then\r\n  manifest_version=\r\n  [[ 2.6 =~ ^2.4 ]] \u0026\u0026 manifest_version=1.6\r\n  [[ 2.6 =~ ^2.6 ]] \u0026\u0026 manifest_version=1.7\r\n  [[ -z ${manifest_version} ]] \u0026\u0026 echo \"ERROR: Unsupported calico version: 2.6\" \u0026\u0026 exit 1\r\n  kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml\r\n  kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/${manifest_version}/calico.yaml\r\nfi\r\n\r\n# ClusterRoleBiding for persistent volume provisioner.\r\nkubectl create clusterrolebinding system:controller:persistent-volume-provisioner \\\r\n  --clusterrole=system:persistent-volume-provisioner \\\r\n  --user system:serviceaccount:kube-system:pvc-protection-controller\r\n\r\n# kubeadm manages the manifests directory, so add configmap after the init returns.\r\nkubectl create -f - \u003c\u003c'EOF'\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: ingress-uid\r\n  namespace: kube-system\r\ndata:\r\n  provider-uid: c81dca1f97a7b4c4\r\n  uid: c81dca1f97a7b4c4\r\nEOF\r\n\r\n# Install L7 GLBC controller, path glbc.manifest to support kubeadm cluster.\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/saltbase/salt/l7-gcp/glbc.manifest \u003e /tmp/glbc.manifest\r\nkubectl convert -f /tmp/glbc.manifest -o json | jq '.spec.volumes |= . + [{\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/etc/kubernetes/admin.conf\", \"type\": \"File\"}}] | .spec.containers[0].volumeMounts |= . + [{\"name\": \"kubeconfig\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/admin.conf\"}]' | \\\r\n  sed \\\r\n    -e 's|--apiserver-host=http://localhost:8080|--apiserver-host=https://127.0.0.1:6443|g' \\\r\n    -e 's|--verbose=true|--verbose=true --kubeconfig=/etc/kubernetes/admin.conf|g' \\\r\n    \u003e /etc/kubernetes/manifests/glbc.manifest\r\nchmod 0600 /etc/kubernetes/manifests/glbc.manifest\r\n\r\n# Install default http-backend controller\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/addons/cluster-loadbalancing/glbc/default-svc-controller.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install default http-backend service\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v1.11.6-00/cluster/addons/cluster-loadbalancing/glbc/default-svc.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install dashboard addon\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/kubernetes-dashboard.yaml |\r\n  kubectl create -n kube-system -f -",
            "template": "#!/bin/bash -xe\r\n\r\ncat \u003c\u003cEOF \u003e /etc/kubernetes/kubeadm.conf\r\napiVersion: kubeadm.k8s.io/v1alpha1\r\nkind: MasterConfiguration\r\nkubernetesVersion: v${k8s_version}\r\ncloudProvider: gce\r\ntoken: ${token}\r\nnetworking:\r\n  serviceSubnet: ${service_cidr}\r\n  podSubnet: ${pod_cidr}\r\nauthorizationModes:\r\n- Node\r\n- RBAC\r\napiServerCertSANs:\r\n- 127.0.0.1\r\ncontrollerManagerExtraArgs:\r\n  cluster-name: ${instance_prefix}\r\n  allocate-node-cidrs: \"true\"\r\n  cidr-allocator-type: \"RangeAllocator\"\r\n  configure-cloud-routes: \"true\"\r\n  cloud-config: /etc/kubernetes/pki/gce.conf\r\n  cluster-cidr: ${pod_cidr}\r\n  service-cluster-ip-range: ${service_cidr}\r\n  feature-gates: ${feature_gates}\r\nschedulerExtraArgs:\r\n  feature-gates: ${feature_gates}\r\napiServerExtraArgs:\r\n  feature-gates: ${feature_gates}\r\nEOF\r\nchmod 0600 /etc/kubernetes/kubeadm.conf\r\n\r\nkubeadm init --config /etc/kubernetes/kubeadm.conf\r\n\r\nexport KUBECONFIG=/etc/kubernetes/admin.conf\r\n\r\nif [ \"${pod_network_type}\" == \"calico\" ]; then\r\n  manifest_version=\r\n  [[ ${calico_version} =~ ^2.4 ]] \u0026\u0026 manifest_version=1.6\r\n  [[ ${calico_version} =~ ^2.6 ]] \u0026\u0026 manifest_version=1.7\r\n  [[ -z $${manifest_version} ]] \u0026\u0026 echo \"ERROR: Unsupported calico version: ${calico_version}\" \u0026\u0026 exit 1\r\n  kubectl apply -f https://docs.projectcalico.org/v${calico_version}/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml\r\n  kubectl apply -f https://docs.projectcalico.org/v${calico_version}/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/$${manifest_version}/calico.yaml\r\nfi\r\n\r\n# ClusterRoleBiding for persistent volume provisioner.\r\nkubectl create clusterrolebinding system:controller:persistent-volume-provisioner \\\r\n  --clusterrole=system:persistent-volume-provisioner \\\r\n  --user system:serviceaccount:kube-system:pvc-protection-controller\r\n\r\n# kubeadm manages the manifests directory, so add configmap after the init returns.\r\nkubectl create -f - \u003c\u003c'EOF'\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: ingress-uid\r\n  namespace: kube-system\r\ndata:\r\n  provider-uid: ${cluster_uid}\r\n  uid: ${cluster_uid}\r\nEOF\r\n\r\n# Install L7 GLBC controller, path glbc.manifest to support kubeadm cluster.\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v${k8s_version}/cluster/saltbase/salt/l7-gcp/glbc.manifest \u003e /tmp/glbc.manifest\r\nkubectl convert -f /tmp/glbc.manifest -o json | jq '.spec.volumes |= . + [{\"name\": \"kubeconfig\", \"hostPath\": {\"path\": \"/etc/kubernetes/admin.conf\", \"type\": \"File\"}}] | .spec.containers[0].volumeMounts |= . + [{\"name\": \"kubeconfig\", \"readOnly\": true, \"mountPath\": \"/etc/kubernetes/admin.conf\"}]' | \\\r\n  sed \\\r\n    -e 's|--apiserver-host=http://localhost:8080|--apiserver-host=https://127.0.0.1:6443|g' \\\r\n    -e 's|--verbose=true|--verbose=true --kubeconfig=/etc/kubernetes/admin.conf|g' \\\r\n    \u003e /etc/kubernetes/manifests/glbc.manifest\r\nchmod 0600 /etc/kubernetes/manifests/glbc.manifest\r\n\r\n# Install default http-backend controller\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v${k8s_version}/cluster/addons/cluster-loadbalancing/glbc/default-svc-controller.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install default http-backend service\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/kubernetes/v${k8s_version}/cluster/addons/cluster-loadbalancing/glbc/default-svc.yaml | \\\r\n  kubectl create -n kube-system -f -\r\n\r\n# Install dashboard addon\r\ncurl -sL https://raw.githubusercontent.com/kubernetes/dashboard/${dashboard_version}/src/deploy/kubernetes-dashboard.yaml |\r\n  kubectl create -n kube-system -f -",
            "vars": {
              "calico_version": "2.6",
              "cluster_uid": "c81dca1f97a7b4c4",
              "dashboard_version": "v1.10.1",
              "feature_gates": "AllAlpha=true,RotateKubeletServerCertificate=false,RotateKubeletClientCertificate=false,ExperimentalCriticalPodAnnotation=true",
              "instance_prefix": "k8s-test-565b15d9",
              "k8s_version": "1.11.6-00",
              "pod_cidr": "192.168.0.0/16",
              "pod_network_type": "kubenet",
              "service_cidr": "10.96.0.0/12",
              "token": "7e1cbc.453eef0a21157a78"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "node-bootstrap",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "8b545abf23d741e7dfc8439695e3b33597d1f6052788e2b8f8b0af71ce2724fb",
            "rendered": "#!/bin/bash -xe\r\n\r\nkubeadm join --token=7e1cbc.453eef0a21157a78 --discovery-token-unsafe-skip-ca-verification 10.128.0.10:6443",
            "template": "#!/bin/bash -xe\r\n\r\nkubeadm join --token=${token} --discovery-token-unsafe-skip-ca-verification ${master_ip}:6443",
            "vars": {
              "master_ip": "10.128.0.10",
              "token": "7e1cbc.453eef0a21157a78"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "shutdown-script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "a002d34ff192ab57f4547510f524e4adcaf8fafd73c6ad19f35de313807de63b",
            "rendered": "#!/bin/bash\r\n# Shutdown script to remove node from the cluster.\r\n\r\nnode=$(hostname)\r\ncfg=\"--kubeconfig /etc/kubernetes/kubelet.conf\"\r\n\r\n# Drain and delete the node.\r\nkubectl $cfg drain $node --delete-local-data --force --ignore-daemonsets\r\nkubectl $cfg delete node $node\r\n\r\nkubeadm reset",
            "template": "#!/bin/bash\r\n# Shutdown script to remove node from the cluster.\r\n\r\nnode=$(hostname)\r\ncfg=\"--kubeconfig /etc/kubernetes/kubelet.conf\"\r\n\r\n# Drain and delete the node.\r\nkubectl $cfg drain $node --delete-local-data --force --ignore-daemonsets\r\nkubectl $cfg delete node $node\r\n\r\nkubeadm reset",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "k8s-all",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [],
                "protocol": "ah"
              },
              {
                "ports": [],
                "protocol": "esp"
              },
              {
                "ports": [],
                "protocol": "icmp"
              },
              {
                "ports": [],
                "protocol": "sctp"
              },
              {
                "ports": [],
                "protocol": "tcp"
              },
              {
                "ports": [],
                "protocol": "udp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:08:23.014-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-all",
            "log_config": [],
            "name": "k8s-test-565b15d9-all",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-all",
            "source_ranges": [
              "192.168.0.0/16"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "vms",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [],
                "protocol": "icmp"
              },
              {
                "ports": [],
                "protocol": "tcp"
              },
              {
                "ports": [],
                "protocol": "udp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:08:22.907-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-vms",
            "log_config": [],
            "name": "k8s-test-565b15d9-vms",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-vms",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "cluster-uid",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "yB3KH5entMQ=",
            "b64_url": "yB3KH5entMQ",
            "byte_length": 8,
            "dec": "14419903818947343556",
            "hex": "c81dca1f97a7b4c4",
            "id": "yB3KH5entMQ",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "instance-prefix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "k8s-test-VlsV2Q==",
            "b64_url": "k8s-test-VlsV2Q",
            "byte_length": 4,
            "dec": "k8s-test-1448809945",
            "hex": "k8s-test-565b15d9",
            "id": "VlsV2Q",
            "keepers": null,
            "prefix": "k8s-test-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "token-part-1",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "fhy8",
            "b64_url": "fhy8",
            "byte_length": 3,
            "dec": "8264892",
            "hex": "7e1cbc",
            "id": "fhy8",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "token-part-2",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "RT7vCiEVeng=",
            "b64_url": "RT7vCiEVeng",
            "byte_length": 8,
            "dec": "4989688263956855416",
            "hex": "453eef0a21157a78",
            "id": "RT7vCiEVeng",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "data",
      "type": "google_compute_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/lustrous-camera-352403/regions/us-central1",
            "names": [
              "us-central1-a",
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "project": "lustrous-camera-352403",
            "region": "us-central1",
            "status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "default-ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:06:15.754-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-default-pool-vm-ssh",
            "log_config": [],
            "name": "k8s-test-565b15d9-default-pool-vm-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-default-pool-vm-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [
              "allow-ssh"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "mig-health-check",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "80"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:06:15.509-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-default-pool-vm-hc",
            "log_config": [],
            "name": "k8s-test-565b15d9-default-pool-vm-hc",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-default-pool-vm-hc",
            "source_ranges": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [
              "allow-service"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "mig-health-check",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 30,
            "creation_timestamp": "2022-07-05T01:06:15.505-07:00",
            "description": "",
            "grpc_health_check": [],
            "healthy_threshold": 1,
            "http2_health_check": [],
            "http_health_check": [
              {
                "host": "",
                "port": 80,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request_path": "/",
                "response": ""
              }
            ],
            "https_health_check": [],
            "id": "projects/lustrous-camera-352403/global/healthChecks/k8s-test-565b15d9-default-pool",
            "log_config": [
              {
                "enable": false
              }
            ],
            "name": "k8s-test-565b15d9-default-pool",
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/healthChecks/k8s-test-565b15d9-default-pool",
            "ssl_health_check": [],
            "tcp_health_check": [],
            "timeout_sec": 10,
            "timeouts": null,
            "type": "HTTP",
            "unhealthy_threshold": 10
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "managed",
      "type": "google_compute_instance_group_manager",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [
              {
                "health_check": "",
                "initial_delay_sec": 30
              }
            ],
            "base_instance_name": "k8s-test-565b15d9-default-pool",
            "description": "compute VM Instance Group",
            "fingerprint": "UDOPeEyPfFk=",
            "id": "projects/lustrous-camera-352403/zones/us-central1-f/instanceGroupManagers/k8s-test-565b15d9-default-pool",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/zones/us-central1-f/instanceGroups/k8s-test-565b15d9-default-pool",
            "name": "k8s-test-565b15d9-default-pool",
            "named_port": [
              {
                "name": "http",
                "port": 80
              }
            ],
            "operation": null,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/zones/us-central1-f/instanceGroupManagers/k8s-test-565b15d9-default-pool",
            "stateful_disk": [],
            "status": [
              {
                "is_stable": true,
                "stateful": [
                  {
                    "has_stateful_config": false,
                    "per_instance_configs": [
                      {
                        "all_effective": true
                      }
                    ]
                  }
                ],
                "version_target": [
                  {
                    "is_reached": true
                  }
                ]
              }
            ],
            "target_pools": [],
            "target_size": 3,
            "timeouts": null,
            "update_policy": [
              {
                "max_surge_fixed": 1,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 1,
                "max_unavailable_percent": 0,
                "minimal_action": "REPLACE",
                "most_disruptive_allowed_action": "",
                "replacement_method": "SUBSTITUTE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/instanceTemplates/default-temp20220705085825765200000001",
                "name": "",
                "target_size": []
              }
            ],
            "wait_for_instances": false,
            "wait_for_instances_status": "STABLE",
            "zone": "us-central1-f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjkwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.default-pool-mig.google_compute_health_check.mig-health-check",
            "module.default-pool-mig.google_compute_instance_template.default",
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.default-pool-mig",
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "advanced_machine_features": [],
            "can_ip_forward": true,
            "confidential_instance_config": [],
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 0,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": {},
                "mode": "READ_WRITE",
                "resource_policies": [],
                "source": "",
                "source_image": "projects/ubuntu-os-cloud/global/images/ubuntu-minimal-2204-jammy-v20220623",
                "type": "PERSISTENT"
              }
            ],
            "guest_accelerator": [],
            "id": "projects/lustrous-camera-352403/global/instanceTemplates/default-temp20220705085825765200000001",
            "instance_description": "",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {},
            "metadata_fingerprint": "JQp9-PhbpA8=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "default-temp20220705085825765200000001",
            "name_prefix": "default-temp",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
                "network_ip": "",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/regions/us-central1/subnetworks/default",
                "subnetwork_project": "lustrous-camera-352403"
              }
            ],
            "project": "lustrous-camera-352403",
            "region": "us-central1",
            "reservation_affinity": [],
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false,
                "provisioning_model": "STANDARD"
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/instanceTemplates/default-temp20220705085825765200000001",
            "service_account": [
              {
                "email": "default",
                "scopes": [
                  "https://www.googleapis.com/auth/compute",
                  "https://www.googleapis.com/auth/devstorage.full_control",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring.write"
                ]
              }
            ],
            "shielded_instance_config": [],
            "tags": [
              "allow-service"
            ],
            "tags_fingerprint": "",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "data",
      "type": "google_compute_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/lustrous-camera-352403/regions/us-central1",
            "names": [
              "us-central1-a",
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "project": "lustrous-camera-352403",
            "region": "us-central1",
            "status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "default-ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:06:15.721-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-master-vm-ssh",
            "log_config": [],
            "name": "k8s-test-565b15d9-master-vm-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-master-vm-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [
              "allow-ssh"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "mig-health-check",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "80"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-07-05T01:06:15.946-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-master-vm-hc",
            "log_config": [],
            "name": "k8s-test-565b15d9-master-vm-hc",
            "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
            "priority": 1000,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/firewalls/k8s-test-565b15d9-master-vm-hc",
            "source_ranges": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": [],
            "source_tags": [],
            "target_service_accounts": [],
            "target_tags": [
              "allow-service"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "mig-health-check",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 30,
            "creation_timestamp": "2022-07-05T01:06:15.801-07:00",
            "description": "",
            "grpc_health_check": [],
            "healthy_threshold": 1,
            "http2_health_check": [],
            "http_health_check": [
              {
                "host": "",
                "port": 80,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request_path": "/",
                "response": ""
              }
            ],
            "https_health_check": [],
            "id": "projects/lustrous-camera-352403/global/healthChecks/k8s-test-565b15d9-master",
            "log_config": [
              {
                "enable": false
              }
            ],
            "name": "k8s-test-565b15d9-master",
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/healthChecks/k8s-test-565b15d9-master",
            "ssl_health_check": [],
            "tcp_health_check": [],
            "timeout_sec": 10,
            "timeouts": null,
            "type": "HTTP",
            "unhealthy_threshold": 10
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "managed",
      "type": "google_compute_instance_group_manager",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [],
            "base_instance_name": "k8s-test-565b15d9-master",
            "description": "compute VM Instance Group",
            "fingerprint": "van7hGS8UNs=",
            "id": "projects/lustrous-camera-352403/zones/us-central1-f/instanceGroupManagers/k8s-test-565b15d9-master",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/zones/us-central1-f/instanceGroups/k8s-test-565b15d9-master",
            "name": "k8s-test-565b15d9-master",
            "named_port": [
              {
                "name": "http",
                "port": 80
              }
            ],
            "operation": null,
            "project": "lustrous-camera-352403",
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/zones/us-central1-f/instanceGroupManagers/k8s-test-565b15d9-master",
            "stateful_disk": [],
            "status": [
              {
                "is_stable": true,
                "stateful": [
                  {
                    "has_stateful_config": false,
                    "per_instance_configs": [
                      {
                        "all_effective": true
                      }
                    ]
                  }
                ],
                "version_target": [
                  {
                    "is_reached": true
                  }
                ]
              }
            ],
            "target_pools": [],
            "target_size": 1,
            "timeouts": null,
            "update_policy": [
              {
                "max_surge_fixed": 1,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 1,
                "max_unavailable_percent": 0,
                "minimal_action": "REPLACE",
                "most_disruptive_allowed_action": "",
                "replacement_method": "SUBSTITUTE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/instanceTemplates/default-template20220705083004598100000001",
                "name": "",
                "target_size": []
              }
            ],
            "wait_for_instances": false,
            "wait_for_instances_status": "STABLE",
            "zone": "us-central1-f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjkwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.master-mig.google_compute_instance_template.default",
            "random_id.instance-prefix"
          ]
        }
      ]
    },
    {
      "module": "module.master-mig",
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "advanced_machine_features": [],
            "can_ip_forward": true,
            "confidential_instance_config": [],
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 0,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": {},
                "mode": "READ_WRITE",
                "resource_policies": [],
                "source": "",
                "source_image": "projects/ubuntu-os-cloud/global/images/ubuntu-minimal-2204-jammy-v20220623",
                "type": "PERSISTENT"
              }
            ],
            "guest_accelerator": [],
            "id": "projects/lustrous-camera-352403/global/instanceTemplates/default-template20220705083004598100000001",
            "instance_description": "",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {},
            "metadata_fingerprint": "JQp9-PhbpA8=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "default-template20220705083004598100000001",
            "name_prefix": "default-template",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/networks/default",
                "network_ip": "",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/regions/us-central1/subnetworks/default",
                "subnetwork_project": "lustrous-camera-352403"
              }
            ],
            "project": "lustrous-camera-352403",
            "region": "us-central1",
            "reservation_affinity": [],
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false,
                "provisioning_model": "STANDARD"
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/lustrous-camera-352403/global/instanceTemplates/default-template20220705083004598100000001",
            "service_account": [
              {
                "email": "default",
                "scopes": [
                  "https://www.googleapis.com/auth/compute",
                  "https://www.googleapis.com/auth/devstorage.full_control",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring.write"
                ]
              }
            ],
            "shielded_instance_config": [],
            "tags": [
              "allow-service"
            ],
            "tags_fingerprint": "",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    }
  ]
}
